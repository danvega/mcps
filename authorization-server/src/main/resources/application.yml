spring:
  application:
    name: authorization-server

  # GitHub OAuth2 configuration for federated login
  # Create GitHub OAuth App at: https://github.com/settings/developers
  # Authorization callback URL: http://localhost:9000/login/oauth2/code/github
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - read:user
              - user:email
        provider:
          github:
            user-name-attribute: login

      # Authorization Server configuration
      authorizationserver:
        client:
          mcp-server:
            registration:
              client-id: "mcp-server"
              client-secret: "{noop}secret"  # {noop} = plain text, for dev only!
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_post"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "http://localhost:8080/authorized"
                - "http://localhost:8080/login/oauth2/code/mcp"
              scopes:
                - "openid"
                - "profile"
                - "email"
                - "mcp.server"
                - "mcp.tools"
            require-proof-key: false  # PKCE disabled for simplicity
            token:
              authorization-code-time-to-live: PT5M
              access-token-time-to-live: PT15M
              refresh-token-time-to-live: P1D

# Server runs on port 9000 (MCP server runs on 8080)
server:
  port: ${PORT:9000}
  servlet:
    session:
      cookie:
        name: MCP_AUTHORIZATION_SERVER_SESSIONID

# Logging configuration
logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG